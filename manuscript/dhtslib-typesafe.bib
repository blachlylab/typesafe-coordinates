@article{Paten01052017,
    author = {Paten, Benedict and Novak, Adam M. and Eizenga, Jordan M. and Garrison, Erik}, 
    title = {Genome graphs and the evolution of genome inference},
    volume = {27}, 
    number = {5}, 
    pages = {665-676}, 
    year = {2017}, 
    doi = {10.1101/gr.214155.116}, 
    abstract ={The human reference genome is part of the foundation of modern human biology and a monumental scientific achievement. However, because it excludes a great deal of common human variation, it introduces a pervasive reference bias into the field of human genomics. To reduce this bias, it makes sense to draw on representative collections of human genomes, brought together into reference cohorts. There are a number of techniques to represent and organize data gleaned from these cohorts, many using ideas implicitly or explicitly borrowed from graph-based models. Here, we survey various projects underway to build and apply these graph-based structures—which we collectively refer to as genome graphs—and discuss the improvements in read mapping, variant calling, and haplotype determination that genome graphs are expected to produce.},
    URL = {http://genome.cshlp.org/content/27/5/665.abstract},
    eprint = {http://genome.cshlp.org/content/27/5/665.full.pdf+html},
    journal = {Genome Research} 
}

@online{CWE193,
  author = {MITRE Corporation},
  title = {CWE-193: Off-by-one Error},
  year = 2006,
  month = Jul,
  day = 19,
  url = {https://cwe.mitre.org/data/definitions/193.html},
  urldate = {2021-08-08},
}

@article{koster_rust-bio_2016,
	title = {Rust-Bio: a fast and safe bioinformatics library},
	volume = {32},
	issn = {1367-4803, 1460-2059},
	url = {https://academic.oup.com/bioinformatics/article-lookup/doi/10.1093/bioinformatics/btv573},
	doi = {10.1093/bioinformatics/btv573},
	shorttitle = {Rust-Bio},
	pages = {444--446},
	number = {3},
	journaltitle = {Bioinformatics},
	shortjournal = {Bioinformatics},
	author = {Köster, Johannes},
	urldate = {2021-07-27},
	date = {2016-02-01},
	langid = {english},
	file = {Full Text:C\:\\Users\\blac96\\Zotero\\storage\\BSJBA3KM\\Köster - 2016 - Rust-Bio a fast and safe bioinformatics library.pdf:application/pdf}
}

@article{perkel_why_2020,
	title = {Why scientists are turning to Rust},
	volume = {588},
	issn = {0028-0836, 1476-4687},
	url = {http://www.nature.com/articles/d41586-020-03382-2},
	doi = {10.1038/d41586-020-03382-2},
	pages = {185--186},
	number = {7836},
	journaltitle = {Nature},
	shortjournal = {Nature},
	author = {Perkel, Jeffrey M.},
	urldate = {2021-07-27},
	date = {2020-12-03},
	langid = {english},
	file = {Full Text:C\:\\Users\\blac96\\Zotero\\storage\\SSDDVF5M\\Perkel - 2020 - Why scientists are turning to Rust.pdf:application/pdf}
}

@software{gregory_dhtslib_nodate,
	title = {dhtslib},
	url = {https://github.com/blachlylab/dhtslib/},
	version = {0.12.0},
	author = {Gregory, Charles Thomas and Blachly, James S}
}

@article{bonfield_htslib_2021,
	title = {{HTSlib}: C library for reading/writing high-throughput sequencing data},
	volume = {10},
	issn = {2047-217X},
	url = {https://academic.oup.com/gigascience/article/doi/10.1093/gigascience/giab007/6139334},
	doi = {10.1093/gigascience/giab007},
	shorttitle = {{HTSlib}},
	abstract = {Abstract
            
              Background
              Since the original publication of the {VCF} and {SAM} formats, an explosion of software tools have been created to process these data files. To facilitate this a library was produced out of the original {SAMtools} implementation, with a focus on performance and robustness. The file formats themselves have become international standards under the jurisdiction of the Global Alliance for Genomics and Health.
            
            
              Findings
              We present a software library for providing programmatic access to sequencing alignment and variant formats. It was born out of the widely used {SAMtools} and {BCFtools} applications. Considerable improvements have been made to the original code plus many new features including newer access protocols, the addition of the {CRAM} file format, better indexing and iterators, and better use of threading.
            
            
              Conclusion
              Since the original Samtools release, performance has been considerably improved, with a {BAM} read-write loop running 5 times faster and {BAM} to {SAM} conversion 13 times faster (both using 16 threads, compared to Samtools 0.1.19). Widespread adoption has seen {HTSlib} downloaded \&gt;1 million times from {GitHub} and conda. The C library has been used directly by an estimated 900 {GitHub} projects and has been incorporated into Perl, Python, Rust, and R, significantly expanding the number of uses via other languages. {HTSlib} is open source and is freely available from htslib.org under {MIT}/{BSD} license.},
	pages = {giab007},
	number = {2},
	journaltitle = {{GigaScience}},
	author = {Bonfield, James K and Marshall, John and Danecek, Petr and Li, Heng and Ohan, Valeriu and Whitwham, Andrew and Keane, Thomas and Davies, Robert M},
	urldate = {2021-07-27},
	date = {2021-01-29},
	langid = {english},
	file = {Full Text:C\:\\Users\\blac96\\Zotero\\storage\\36L5YP5B\\Bonfield et al. - 2021 - HTSlib C library for readingwriting high-through.pdf:application/pdf}
}

@article{pedersen_hts-nim_2018,
	title = {hts-nim: scripting high-performance genomic analyses},
	volume = {34},
	issn = {1367-4803, 1460-2059},
	url = {https://academic.oup.com/bioinformatics/article/34/19/3387/4990493},
	doi = {10.1093/bioinformatics/bty358},
	shorttitle = {hts-nim},
	abstract = {Abstract
            
              Motivation
              Extracting biological insight from genomic data inevitably requires custom software. In many cases, this is accomplished with scripting languages, owing to their accessibility and brevity. Unfortunately, the ease of scripting languages typically comes at a substantial performance cost that is especially acute with the scale of modern genomics datasets.
            
            
              Results
              We present hts-nim, a high-performance library written in the Nim programming language that provides a simple, scripting-like syntax without sacrificing performance.
            
            
              Availability and implementation
              hts-nim is available at https://github.com/brentp/hts-nim and the example tools are at https://github.com/brentp/hts-nim-tools both under the {MIT} license.},
	pages = {3387--3389},
	number = {19},
	journaltitle = {Bioinformatics},
	author = {Pedersen, Brent S and Quinlan, Aaron R},
	editor = {Birol, Inanc},
	urldate = {2021-08-04},
	date = {2018-10-01},
	langid = {english},
	file = {Full Text:C\:\\Users\\blac96\\Zotero\\storage\\CPNTHDN4\\Pedersen and Quinlan - 2018 - hts-nim scripting high-performance genomic analys.pdf:application/pdf}
}

@article{reinert_seqan_2017,
	title = {The {SeqAn} C++ template library for efficient sequence analysis: A resource for programmers},
	volume = {261},
	issn = {01681656},
	url = {https://linkinghub.elsevier.com/retrieve/pii/S0168165617315420},
	doi = {10.1016/j.jbiotec.2017.07.017},
	shorttitle = {The {SeqAn} C++ template library for efficient sequence analysis},
	pages = {157--168},
	journaltitle = {Journal of Biotechnology},
	shortjournal = {Journal of Biotechnology},
	author = {Reinert, Knut and Dadi, Temesgen Hailemariam and Ehrhardt, Marcel and Hauswedell, Hannes and Mehringer, Svenja and Rahn, René and Kim, Jongkyu and Pockrandt, Christopher and Winkler, Jörg and Siragusa, Enrico and Urgese, Gianvito and Weese, David},
	urldate = {2021-08-04},
	date = {2017-11},
	langid = {english},
	file = {Full Text:C\:\\Users\\blac96\\Zotero\\storage\\LD88WX7I\\Reinert et al. - 2017 - The SeqAn C++ template library for efficient seque.pdf:application/pdf}
}

@article{cock_biopython_2009,
	title = {Biopython: freely available Python tools for computational molecular biology and bioinformatics},
	volume = {25},
	issn = {1367-4803, 1460-2059},
	url = {https://academic.oup.com/bioinformatics/article-lookup/doi/10.1093/bioinformatics/btp163},
	doi = {10.1093/bioinformatics/btp163},
	shorttitle = {Biopython},
	pages = {1422--1423},
	number = {11},
	journaltitle = {Bioinformatics},
	shortjournal = {Bioinformatics},
	author = {Cock, P. J. A. and Antao, T. and Chang, J. T. and Chapman, B. A. and Cox, C. J. and Dalke, A. and Friedberg, I. and Hamelryck, T. and Kauff, F. and Wilczynski, B. and de Hoon, M. J. L.},
	urldate = {2021-08-04},
	date = {2009-06-01},
	langid = {english},
	file = {Full Text:C\:\\Users\\blac96\\Zotero\\storage\\IAT4RDNR\\Cock et al. - 2009 - Biopython freely available Python tools for compu.pdf:application/pdf}
}